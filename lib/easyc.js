// Generated by CoffeeScript 1.8.0
var Compiler, fs, util, _;

fs = require('co-fs-plus');

Compiler = require('./compiler');

_ = require('lodash');

util = require('util');

module.exports = (function() {
  function exports() {}

  exports.compile = function*() {
    var config, results;
    config = JSON.parse((yield fs.readFile('easycompile.json', 'utf-8')));
    results = (yield Compiler.run(config));
    (yield fs.mkdirp('.easyc/'));
    return (yield fs.writeFile('.easyc/data.json', JSON.stringify(results, null, 2)));
  };

  exports.load = function*() {
    var e;
    if (!this._cache) {
      try {
        this._cache = (yield fs.readFile('.easyc/data.json'));
      } catch (_error) {
        e = _error;
        this._cache = (yield this.compile());
      }
    }
    return this._cache;
  };

  exports.getJavascripts = function*(app, packs) {
    var config, pack, _ref;
    config = (yield this.load());
    if (!util.isArray(packs)) {
      packs = [packs];
    }
    if (packs) {
      return _.flatten((function() {
        var _i, _len, _ref, _ref1, _results;
        _results = [];
        for (_i = 0, _len = packs.length; _i < _len; _i++) {
          pack = packs[_i];
          _results.push((config != null ? (_ref = config[app]) != null ? (_ref1 = _ref.javascripts.packs) != null ? _ref1[pack] : void 0 : void 0 : void 0) || []);
        }
        return _results;
      })());
    } else {
      return _.flatten((config != null ? (_ref = config[app]) != null ? _ref.javascripts.packs : void 0 : void 0) || []);
    }
  };

  exports.getStylesheets = function*(app, packs) {
    var config, pack, _ref;
    config = (yield this.load());
    if (!util.isArray(packs)) {
      packs = [packs];
    }
    if (packs) {
      return _.flatten((function() {
        var _i, _len, _ref, _ref1, _results;
        _results = [];
        for (_i = 0, _len = packs.length; _i < _len; _i++) {
          pack = packs[_i];
          _results.push((config != null ? (_ref = config[app]) != null ? (_ref1 = _ref.stylesheets.packs) != null ? _ref1[pack] : void 0 : void 0 : void 0) || []);
        }
        return _results;
      })());
    } else {
      return _.flatten((config != null ? (_ref = config[app]) != null ? _ref.stylesheets.packs : void 0 : void 0) || []);
    }
  };

  return exports;

})();
