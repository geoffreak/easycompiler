// Generated by CoffeeScript 1.8.0
var Q, fs, less, path, render;

fs = require('co-fs-plus');

path = require('path');

less = require('less');

Q = require('q');

render = Q.nbind(less.render, less);

module.exports = (function() {
  function exports() {}

  exports.compilesTo = 'css';

  exports.compile = function*(pack, input, options) {
    var compiled, content, e, inputWeb, output, outputWeb;
    output = path.resolve(options.buildRoot, pack, input) + '.css';
    input = path.resolve(options.root, input);
    outputWeb = path.relative(options.webRoot, output);
    inputWeb = path.relative(options.webRoot, input);
    content = (yield fs.readFile(input, "utf-8"));
    (yield fs.mkdirp(path.dirname(output)));
    try {
      compiled = (yield render(content, {
        compress: true,
        filename: inputWeb,
        paths: [path.join(options.webRoot, path.relative(options.webRoot, path.dirname(input)))],
        relativeUrls: true,
        rootpath: "/" + (path.relative(options.webRoot, path.dirname(output))),
        outputFilename: path.basename(output),
        sourceMap: true,
        sourceMapURL: (path.basename(output)) + ".map",
        sourceMapFilename: (path.join(options.webRoot, path.relative(options.webRoot, output))) + ".map",
        sourceMapBasepath: options.webRoot + "/",
        sourceMapRootpath: "/",
        writeSourceMap: function(map) {
          map = JSON.parse(map);
          return fs.writeFile(output + ".map", JSON.stringify(map));
        }
      }));
    } catch (_error) {
      e = _error;
      throw new Error("LESS Compile Error\n" + e.message + "\nFile: " + e.filename + " [line " + e.line + "]\n" + (e.extract.join('\n')));
    }
    (yield fs.writeFile(output, compiled));
    return path.relative(options.root, output);
  };

  return exports;

})();
