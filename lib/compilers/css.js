// Generated by CoffeeScript 1.8.0
var CleanCSS, Q, fs, less, path, render, _;

fs = require('co-fs-plus');

path = require('path');

_ = require('lodash');

less = require('less');

Q = require('q');

CleanCSS = require('clean-css');

render = Q.nbind(less.render, less);

module.exports = (function() {
  function exports() {}

  exports.compile = function*(pack, files, options) {
    var cleaner, cssDump, file, minifiedFiles, minimized, output, outputWeb, results, webFiles, yields, _i, _len, _ref;
    files = _.map(files, (function(_this) {
      return function(file) {
        return path.resolve(options.root, file);
      };
    })(this));
    minifiedFiles = [];
    if (files.length) {
      output = path.resolve(options.buildRoot, pack + ".min.css");
      outputWeb = path.relative(options.webRoot, output);
      yields = [];
      for (_i = 0, _len = files.length; _i < _len; _i++) {
        file = files[_i];
        yields.push(fs.readFile(file, "utf-8"));
      }
      cssDump = (yield yields);
      cssDump = cssDump.join('\n');
      if ((_ref = options.minify) === 'false' || _ref === false) {
        minimized = cssDump;
      } else {
        cleaner = new CleanCSS({
          compatibility: 'ie8',
          keepSpecialComments: 0
        });
        minimized = cleaner.minify(cssDump);
      }
      (yield fs.mkdirp(path.dirname(output)));
      (yield fs.writeFile(output, minimized));
      minifiedFiles.push("/" + outputWeb);
    }
    webFiles = _.map(files, (function(_this) {
      return function(file) {
        return '/' + path.relative(options.webRoot, file);
      };
    })(this));
    return results = {
      dev: webFiles,
      prod: minifiedFiles
    };
  };

  return exports;

})();
