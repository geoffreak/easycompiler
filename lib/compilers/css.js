// Generated by CoffeeScript 1.9.1
var CleanCSS, Q, _, debug, fs, less, path, render;

fs = require('co-fs-plus');

path = require('path');

_ = require('lodash');

less = require('less');

Q = require('q');

CleanCSS = require('clean-css');

debug = require('debug')('compiler:css');

render = Q.nbind(less.render, less);

module.exports = (function() {
  function exports() {}

  exports.compile = function*(pack, files, options) {
    var cleaner, cssDump, file, i, len, minifiedFiles, minimized, output, outputWeb, ref, results, webFiles, yields;
    debug("Compiling CSS for '" + pack + "'");
    files = _.map(files, (function(_this) {
      return function(file) {
        return path.resolve(options.root, file);
      };
    })(this));
    minifiedFiles = [];
    if (!options.skipMinify) {
      debug("Minifying CSS for '" + pack + "' (" + files.length + " files)");
      if (files.length) {
        output = path.resolve(options.buildRoot, pack + ".min.css");
        outputWeb = path.relative(options.webRoot, output);
        yields = [];
        for (i = 0, len = files.length; i < len; i++) {
          file = files[i];
          yields.push(fs.readFile(file, "utf-8"));
        }
        cssDump = (yield yields);
        cssDump = cssDump.join('\n');
        if ((ref = options.minify) === 'false' || ref === false) {
          minimized = cssDump;
        } else {
          cleaner = new CleanCSS({
            compatibility: 'ie8',
            keepSpecialComments: 0
          });
          minimized = cleaner.minify(cssDump);
        }
        (yield fs.mkdirp(path.dirname(output)));
        (yield fs.writeFile(output, minimized));
        minifiedFiles.push("/" + outputWeb);
      }
    }
    webFiles = _.map(files, (function(_this) {
      return function(file) {
        return '/' + path.relative(options.webRoot, file);
      };
    })(this));
    return results = {
      dev: webFiles,
      prod: minifiedFiles
    };
  };

  return exports;

})();
