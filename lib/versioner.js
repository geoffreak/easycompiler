// Generated by CoffeeScript 1.9.3
var Q, Versioner, _, hashFiles, path;

hashFiles = require('hash-files');

_ = require('lodash');

path = require('path');

Q = require('q');

Versioner = (function() {
  function Versioner() {
    this.store = {};
  }

  Versioner.prototype.version = function*(files, options) {
    var deferred, file, i, len, pathToFile;
    for (i = 0, len = files.length; i < len; i++) {
      file = files[i];
      pathToFile = path.join(options.webRoot, file);
      if (this.store[pathToFile] != null) {
        continue;
      }
      deferred = Q.defer();
      hashFiles({
        files: [pathToFile],
        noGlob: true
      }, deferred.makeNodeResolver());
      this.store[pathToFile] = (yield deferred.promise);
    }
    return _.map(files, (function(_this) {
      return function(file) {
        pathToFile = path.join(options.webRoot, file);
        return file + '?h=' + _this.store[pathToFile];
      };
    })(this));
  };

  return Versioner;

})();

module.exports = Versioner;
